1. CXXXManager::preLoad();  ---预加载
2. 全局统一的工作线程池。
3. CXXXManager::load()的时候返回空可能是正在加载，也可能是没有。
4. CXXXManager::confirm()返回值表示资源的状态， RS_LOADING == 正在加载。 RS_OK==加载完毕 。 RS_FAILD == 加载失败。
5. 多线程加载分成两部分。
     异步加载部分: 主要负责I/O相关的操作，需要在加载线程中做异步处理。 
     同步加载部分: 异步加载完毕后，需要在Device的线程中做同步加载操作。

6. 基于模板的设计，可以用策略方式来决定是否需要多线程加载。