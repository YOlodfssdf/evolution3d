ENUMCLASS(enum) eDATA_TYPE
{
	DATATYPE_Float,
	DATATYPE_Short,
	DATATYPE_float16,
	DATATYPE_Int,
	DATATYPE_Byte,
	DATATYPE_UByte,
	DATATYPE_UShort,
};
#define MAKEPIXEL_FORMAT(bbp , index  )  ( (bbp<<8) +index)

ENUMCLASS(enum)  ePIXEL_FORMAT
{
	//Classic Texture format
	PIXELFORMAT_R8G8B8             = MAKEPIXEL_FORMAT( 24, 0),
	PIXELFORMAT_R8G8B8A8           = MAKEPIXEL_FORMAT( 32, 1),
	PIXELFORMAT_R8G8B8X8           = MAKEPIXEL_FORMAT( 32, 2),
	PIXELFORMAT_B8G8R8             = MAKEPIXEL_FORMAT( 24, 3),
	PIXELFORMAT_B8G8R8A8           = MAKEPIXEL_FORMAT( 32, 4),
	PIXELFORMAT_B8G8R8X8           = MAKEPIXEL_FORMAT( 32, 5),
	
	PIXELFORMAT_R8G8B8A8S          = MAKEPIXEL_FORMAT( 32, 6),
	PIXELFORMAT_R8G8B8A8SINT       = MAKEPIXEL_FORMAT( 32, 7),
	PIXELFORMAT_R8G8B8A8UINT       = MAKEPIXEL_FORMAT( 32, 8),



	//16bit interger texture format						   	
	PIXELFORMAT_R16G16B16U         = MAKEPIXEL_FORMAT( 48, 9),
	PIXELFORMAT_R16G16B16A16U      = MAKEPIXEL_FORMAT( 64, 10),
	PIXELFORMAT_R16G16B16A16UINT   = MAKEPIXEL_FORMAT( 64, 11),

	//Signed
	PIXELFORMAT_R16G16B16S         = MAKEPIXEL_FORMAT( 48, 12),
	PIXELFORMAT_R16G16B16A16S      = MAKEPIXEL_FORMAT( 64, 13),
    PIXELFORMAT_R16G16B16A16SINT   = MAKEPIXEL_FORMAT( 64, 14), 

	//16bit float16 float texture format				   	
	PIXELFORMAT_R16G16B16F         = MAKEPIXEL_FORMAT( 48, 16),
	PIXELFORMAT_R16G16B16A16F      = MAKEPIXEL_FORMAT( 64, 17),



	//32bit float texture format						   	
	PIXELFORMAT_R32G32B32F         = MAKEPIXEL_FORMAT( 96, 18),
	PIXELFORMAT_R32G32B32A32F      = MAKEPIXEL_FORMAT(128, 19),

	//32bit int
	PIXELFORMAT_R32G32B32U         = MAKEPIXEL_FORMAT( 96, 22),
	PIXELFORMAT_R32G32B32A32U      = MAKEPIXEL_FORMAT(128, 23),

	PIXELFORMAT_R32G32B32S         = MAKEPIXEL_FORMAT( 96, 24),
	PIXELFORMAT_R32G32B32A32S      = MAKEPIXEL_FORMAT(128, 25),

	//None 3/4 channel									   	
	PIXELFORMAT_ALPHA8             = MAKEPIXEL_FORMAT(  8, 26),

	PIXELFORMAT_LUMINANCE8         = MAKEPIXEL_FORMAT(  8, 27),
	PIXELFORMAT_LUMINANCE8ALPHA8   = MAKEPIXEL_FORMAT( 16, 28),
	PIXELFORMAT_LUMINANCE16        = MAKEPIXEL_FORMAT( 16, 29),
	PIXELFORMAT_LUMINANCE16F       = MAKEPIXEL_FORMAT( 16, 30),
	PIXELFORMAT_LUMINANCE32F       = MAKEPIXEL_FORMAT( 32, 31),


	//1-2通道16bit浮点
	PIXELFORMAT_R16F               = MAKEPIXEL_FORMAT( 16, 32),
	PIXELFORMAT_R16G16F            = MAKEPIXEL_FORMAT( 32, 33),

	//1-2通道16bit整形
	PIXELFORMAT_R16U               = MAKEPIXEL_FORMAT( 16, 34),
	PIXELFORMAT_R16G16U            = MAKEPIXEL_FORMAT( 32, 35),
	PIXELFORMAT_R16G16UINT         = MAKEPIXEL_FORMAT( 32, 36),

	PIXELFORMAT_R16S               = MAKEPIXEL_FORMAT( 16, 37),
	PIXELFORMAT_R16G16S            = MAKEPIXEL_FORMAT( 32, 38),
	PIXELFORMAT_R16G16SINT         = MAKEPIXEL_FORMAT( 32, 39),

	//1-2通道32bit浮点
	PIXELFORMAT_R32F               = MAKEPIXEL_FORMAT( 32, 40),
	PIXELFORMAT_R32G32F            = MAKEPIXEL_FORMAT( 64, 41),

	//1-2通道32bit整形
	PIXELFORMAT_R32U               = MAKEPIXEL_FORMAT( 32, 42),
	PIXELFORMAT_R32G32U            = MAKEPIXEL_FORMAT( 64, 43),

	PIXELFORMAT_R32S               = MAKEPIXEL_FORMAT( 32, 44),
	PIXELFORMAT_R32G32S            = MAKEPIXEL_FORMAT( 64, 45),

	//Depth												   	
	PIXELFORMAT_DEPTH16            = MAKEPIXEL_FORMAT( 16, 46),
	PIXELFORMAT_DEPTH24            = MAKEPIXEL_FORMAT( 24, 47),
	PIXELFORMAT_DEPTH32            = MAKEPIXEL_FORMAT( 32, 48), 


	//不可以操作的
	PIXELFORMAT_DXT1               = MAKEPIXEL_FORMAT( 32,  49), 
	PIXELFORMAT_DXT2               = MAKEPIXEL_FORMAT( 32,  50), 
	PIXELFORMAT_DXT3               = MAKEPIXEL_FORMAT( 32,  51), 
	PIXELFORMAT_DXT4               = MAKEPIXEL_FORMAT( 32,  52), 
	PIXELFORMAT_DXT5               = MAKEPIXEL_FORMAT( 32,  53), 


	//视频纹理的常见的三种格式。
	//其他的YUV格式目前不支持
	PIXELFORMAT_YV12               = MAKEPIXEL_FORMAT(12 , 54),
	PIXELFORMAT_YVY2               = MAKEPIXEL_FORMAT(16 , 55),
	PIXELFORMAT_AYUV               = MAKEPIXEL_FORMAT(32 , 56),

	//================
	PIXELFORMAT_None,
};