ENUMCLASS( enum )  eRenderMode 
{
	eRenderMode_Render      = 0 ,
	eRenderMode_PixelSelect = 1   ,
	eRenderMode_Select = eRenderMode_PixelSelect,
};

ENUMCLASS( enum )  eShaderVarSemantic 
{
	eSES_POSITION = 0 ,
	eSES_NORMAL   ,
	eSES_TANGENT  ,
	eSES_BINORMAL ,
	eSES_TEXCOORD ,
	eSES_DIFFUSE  ,
	eSES_ANY      ,
};


#define MAKE_2SHORT_TO_INT (hi , low)  ( (hi)<<16|(low) )
#define MAKE_2BYTE_TO_SHORT(hi , low)  ( (hi)<<8 |(low) )


ENUMCLASS(enum)  eShaderVarDataType
{
	SEDT_INT16       = MAKE_2BYTE_TO_SHORT(0 ,2),
	SEDT_UINT16      = MAKE_2BYTE_TO_SHORT(1 ,2),
	SEDT_INT32       = MAKE_2BYTE_TO_SHORT(2 ,4),
	SEDT_UINT32      = MAKE_2BYTE_TO_SHORT(3 ,4),
	SEDT_FLOAT16     = MAKE_2BYTE_TO_SHORT(4 ,2),
	SEDT_FLOAT32     = MAKE_2BYTE_TO_SHORT(5 ,4),
	SEDT_BYTE        = MAKE_2BYTE_TO_SHORT(6 ,1),
	SEDT_UBYTE       = MAKE_2BYTE_TO_SHORT(7 ,1),
	SEDT_OBJECT      = MAKE_2BYTE_TO_SHORT(8 ,0),
	SEDT_STRING      = MAKE_2BYTE_TO_SHORT(9 ,0),
	SEDT_TEXTURE     = MAKE_2BYTE_TO_SHORT(10,0),
	SEDT_TEXTURE1D   = MAKE_2BYTE_TO_SHORT(11,0),
	SEDT_TEXTURE2D   = MAKE_2BYTE_TO_SHORT(12,0),
	SEDT_TEXTURE2DA  = MAKE_2BYTE_TO_SHORT(13,0),
    SEDT_TEXTURE3D   = MAKE_2BYTE_TO_SHORT(14,0),
	SEDT_TEXTURECUBE = MAKE_2BYTE_TO_SHORT(15,0),
	SEDT_SAMPLER     = MAKE_2BYTE_TO_SHORT(16,0),
	SEDT_BOOL        = MAKE_2BYTE_TO_SHORT(17,1),
    SEDT_STRUCT      = MAKE_2BYTE_TO_SHORT(18,0),
	SEDT_ANY         = MAKE_2BYTE_TO_SHORT(19,0),
};

#define MAKE_SHADER_VAR_TYPPE( dt , nCol , nRow )  ( (dt)<<16 | (nCol)<<8 | (nRow) )

ENUMCLASS(enum)  eShaderVarType
{
	SHADERVARTYPE_FLOAT    = MAKE_SHADER_VAR_TYPPE(SEDT_FLOAT32 , 1, 1 ),
	SHADERVARTYPE_FLOAT2   = MAKE_SHADER_VAR_TYPPE(SEDT_FLOAT32 , 1, 2 ),
	SHADERVARTYPE_FLOAT3   = MAKE_SHADER_VAR_TYPPE(SEDT_FLOAT32 , 1, 3 ),
	SHADERVARTYPE_FLOAT4   = MAKE_SHADER_VAR_TYPPE(SEDT_FLOAT32 , 1, 4 ),

	SHADERVARTYPE_HALF     = MAKE_SHADER_VAR_TYPPE(SEDT_FLOAT16 , 1, 1 ),
	SHADERVARTYPE_HALF2    = MAKE_SHADER_VAR_TYPPE(SEDT_FLOAT16 , 1, 2 ),
	SHADERVARTYPE_HALF3    = MAKE_SHADER_VAR_TYPPE(SEDT_FLOAT16 , 1, 3 ),
	SHADERVARTYPE_HALF4    = MAKE_SHADER_VAR_TYPPE(SEDT_FLOAT16 , 1, 4 ),

	SHADERVARTYPE_INT      = MAKE_SHADER_VAR_TYPPE(SEDT_INT32   , 1, 1 ),
	SHADERVARTYPE_INT2     = MAKE_SHADER_VAR_TYPPE(SEDT_INT32   , 1, 2 ),
	SHADERVARTYPE_INT3     = MAKE_SHADER_VAR_TYPPE(SEDT_INT32   , 1, 3 ),
	SHADERVARTYPE_INT4     = MAKE_SHADER_VAR_TYPPE(SEDT_INT32   , 1, 4 ),

	SHADERVARTYPE_UINT     = MAKE_SHADER_VAR_TYPPE(SEDT_UINT32  , 1, 1 ),
	SHADERVARTYPE_UINT2    = MAKE_SHADER_VAR_TYPPE(SEDT_UINT32  , 1, 2 ),
	SHADERVARTYPE_UINT3    = MAKE_SHADER_VAR_TYPPE(SEDT_UINT32  , 1, 3 ),
	SHADERVARTYPE_UINT4    = MAKE_SHADER_VAR_TYPPE(SEDT_UINT32  , 1, 4 ),

	SHADERVARTYPE_SHORT    =  MAKE_SHADER_VAR_TYPPE(SEDT_INT16  , 1, 1 ),
	SHADERVARTYPE_SHORT2   =  MAKE_SHADER_VAR_TYPPE(SEDT_INT16  , 1, 2 ),
	SHADERVARTYPE_SHORT3   =  MAKE_SHADER_VAR_TYPPE(SEDT_INT16  , 1, 3 ),
	SHADERVARTYPE_SHORT4   =  MAKE_SHADER_VAR_TYPPE(SEDT_INT16  , 1, 4 ),

	SHADERVARTYPE_USHORT   =  MAKE_SHADER_VAR_TYPPE(SEDT_UINT16 , 1, 1 ),
	SHADERVARTYPE_USHORT2  =  MAKE_SHADER_VAR_TYPPE(SEDT_UINT16 , 1, 2 ),
	SHADERVARTYPE_USHORT3  =  MAKE_SHADER_VAR_TYPPE(SEDT_UINT16 , 1, 3 ),
	SHADERVARTYPE_USHORT4  =  MAKE_SHADER_VAR_TYPPE(SEDT_UINT16 , 1, 4 ),

	SHADERVARTYPE_BYTE     =  MAKE_SHADER_VAR_TYPPE(SEDT_BYTE   , 1, 1 ),
	SHADERVARTYPE_BYTE2    =  MAKE_SHADER_VAR_TYPPE(SEDT_BYTE   , 1, 2 ),
	SHADERVARTYPE_BYTE3    =  MAKE_SHADER_VAR_TYPPE(SEDT_BYTE   , 1, 3 ),
	SHADERVARTYPE_BYTE4    =  MAKE_SHADER_VAR_TYPPE(SEDT_BYTE   , 1, 4 ),

	SHADERVARTYPE_UBYTE    =  MAKE_SHADER_VAR_TYPPE(SEDT_UBYTE  , 1, 1 ),
	SHADERVARTYPE_UBYTE2   =  MAKE_SHADER_VAR_TYPPE(SEDT_UBYTE  , 1, 2 ),
	SHADERVARTYPE_UBYTE3   =  MAKE_SHADER_VAR_TYPPE(SEDT_UBYTE  , 1, 3 ),
	SHADERVARTYPE_UBYTE4   =  MAKE_SHADER_VAR_TYPPE(SEDT_UBYTE  , 1, 4 ),

	//Matrix															
	SHADERVARTYPE_Matrix      = MAKE_SHADER_VAR_TYPPE(SEDT_FLOAT32   , 4  , 4 ),
	SHADERVARTYPE_Matrix3x3   = MAKE_SHADER_VAR_TYPPE(SEDT_FLOAT32   , 3  , 3 ),
	SHADERVARTYPE_Matrix4x3   = MAKE_SHADER_VAR_TYPPE(SEDT_FLOAT32   , 3  , 4 ),
	SHADERVARTYPE_Matrix3x4   = MAKE_SHADER_VAR_TYPPE(SEDT_FLOAT32   , 4  , 3 ),

	//Object
	SHADERVARTYPE_Sampler     = MAKE_SHADER_VAR_TYPPE(SEDT_SAMPLER    , 0 , 1  ),
	SHADERVARTYPE_Texture     = MAKE_SHADER_VAR_TYPPE(SEDT_TEXTURE    , 0 , 1   ),
	SHADERVARTYPE_Texture1D   = MAKE_SHADER_VAR_TYPPE(SEDT_TEXTURE1D  , 0 , 1   ),
	SHADERVARTYPE_Texture2D   = MAKE_SHADER_VAR_TYPPE(SEDT_TEXTURE2D  , 0 , 2   ),
    SHADERVARTYPE_TextureArray= MAKE_SHADER_VAR_TYPPE(SEDT_TEXTURE2DA , 0 , 2   ),
	SHADERVARTYPE_Texture3D   = MAKE_SHADER_VAR_TYPPE(SEDT_TEXTURE3D  , 0 , 3   ),
	SHADERVARTYPE_TextureCube = MAKE_SHADER_VAR_TYPPE(SEDT_TEXTURECUBE, 0 , 6   ),



    SHADERVARTYPE_STRUCT      = MAKE_SHADER_VAR_TYPPE(SEDT_STRUCT , 0 , 0),
	//=================
	SHADERVARTYPE_Unkown      = MAKE_SHADER_VAR_TYPPE(SEDT_ANY , 0 , 0)
};


ENUMCLASS(enum)  eShaderType
{
	eShader_VertexShader = 0,
	eShader_PixelShader,
	eShader_GeometryShader,
	eShader_ComputeShader,
	eShader_HullShader,
	eShader_DomainShader,
	//eShader_Tessellator,
	eShader_Max,
	eShader_None,
};


ENUMCLASS(enum)  eMatrixMode
{
	MATRIXMODE_World,
	MATRIXMODE_View,
	MATRIXMODE_Project,
	MATRIXMODE_Texture,
};

ENUMCLASS(enum)  ePrimtiveType
{
	ePrimtiveType_Unknown             = 0,
	ePrimtiveType_Points              = 1,
	ePrimtiveType_Lines               = 2,
	ePrimtiveType_LineStrip           = 3,
	ePrimtiveType_Triangles           = 4,
	ePrimtiveType_TriangleStrip       = 5,
	ePrimtiveType_Lines_Adj           = 10,
	ePrimtiveType_LineStrip_Adj       = 11,
	ePrimtiveType_Triangles_Adj       = 12,
	ePrimtiveType_TriangleStrip_Adj   = 13,
};

ENUMCLASS(enum)   eTextureState
{
	Texture_Stage0  = 0 , Texture_Diffuse = 0 ,
	Texture_Stage1  = 1 , Texture_Mask    = 1 ,
	Texture_Stage2  = 2,
	Texture_Stage3,
	Texture_Stage4,
	Texture_Stage5,
	Texture_Stage6,
	Texture_Stage7,

	Texture_StageMax,
};

ENUMCLASS(enum)    eInputPerVertUsage
{
	INPUT_USAGE_PER_VERTEX_DATA,
	INPUT_USAGE_PER_INSTANCE_DATA,
};

ENUMCLASS(enum)  eRenderStateType
{
	eRenderState_Sampler,
	eRenderState_Blend,
	eRenderState_Rasterizer,
	eRenderState_DepthStencil,
};

ENUMCLASS(enum)  eResourceBindType
{
	BIND_AS_VERTEX_BUFFER   =0x0001,
	BIND_AS_INDEX_BUFFER    =0x0002,
	BIND_AS_CONSTANT_BUFFER =0x0004,
	BIND_AS_SHADER_RESOURCE =0x0008,
	BIND_AS_STREAM_OUTPUT   =0x0010,
	BIND_AS_RENDER_TARGET   =0x0020,
};


enum
{
	RESOURCE_ACCESS_NONE      = 0,
	RESOURCE_ACCESS_READ      = 0x10000L, 
	RESOURCE_ACCESS_WRITE     = 0x20000L, 
	RESOURCE_ACCESS_READWRITE = 0x30000L,
};

typedef int eResourceAccessFlage;

ENUMCLASS(enum)  eResourceUsage
{
	RESOURCE_USAGE_DEFAULT   = 0,
	RESOURCE_USAGE_IMMUTABLE = 1,
	RESOURCE_USAGE_DYNAMIC   = 2,
	RESOURCE_USAGE_STAGING   = 3,
} ;

ENUMCLASS(enum)  eResourceType
{
	//Texture,
	RESOURCE_TEXTURE      = 0x0010,
	RESOURCE_TEXTURE1D    ,
	RESOURCE_TEXTURE2D    ,
	RESOURCE_TEXTURE3D    ,
	RESOURCE_TEXTURECube  ,
    RESOURCE_DEPTHBUFFER  ,
	RESOURCE_RENDERTARGET ,
	//Buffer;
	RESOURCE_BUFFER      = 0x0020,
	RESOURCE_INDEXBUFFER  ,
	RESOURCE_VERTEXBUFFER ,
	RESOURCE_CONSTBUFFER  ,

	//Shader
	RESOURCE_SHADER     = 0x0030,
	RESOURCE_GPUPROGRAM   ,

    //
    RESOURCE_OTHER , 

};

ENUMCLASS(enum)  eLockPolicy
{
	eLock_Read             = 1,
	eLock_Write            = 2,
	eLock_ReadWrite        = 3,
	eLock_WriteDiscard     = 4,
	eLock_WriteNoOverwrite = 5,
};

